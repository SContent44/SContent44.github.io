(window.webpackJsonp=window.webpackJsonp||[]).push([["router-viewmodel"],{189:function(e,n,r){"use strict";r.r(n);r(72);var t=r(40),o=(r(15),r(26),{view:"<div>\r\n    <p>\r\n        We also are able to split our routes from the main application into asynchronous routes using\r\n        <code>dynamic imports</code>.\r\n    </p>\r\n    <p>\r\n        This child route is a <code>static import</code> for the parent route so it is bundled together with it, however\r\n        the parent route is <code>dynamically imported</code> so it's split from our main applications bundle.\r\n    </p>\r\n    <p>\r\n        You can see this in action if you open the developer console and click on the do a refresh of this page without\r\n        caching.\r\n    </p>\r\n</div>\r\n"}),a=[{route:"",title:"How",moduleId:function(){return o},modelName:"How",nav:!0},{route:"nested",title:"Nested async route",moduleId:function(){return r.e("nested-async-route").then(r.bind(null,194))},nav:!0}],i={view:'<section id="async">\r\n    <header><h3>Router</h3></header>\r\n\r\n    <article>\r\n        <header><h4>How?</h4></header>\r\n        <p>\r\n            Typically Durandals <code>router</code> module requires you to specify a\r\n            <code>moduleId</code>\r\n            for each route.\r\n        </p>\r\n\r\n        <p>\r\n            To allow Webpack to know these are actual module dependencies, we instead set each\r\n            <code>moduleId</code> to a function that returns the actual ViewModel instance instead.\r\n        </p>\r\n    </article>\r\n    <br>\r\n\r\n    <article>\r\n        <header><h4>Asynchronous Routes</h4></header>\r\n\r\n        <ul class="nav nav-tabs" data-bind="foreach: router.navigationModel">\r\n            <li data-bind="css: { active: isActive }">\r\n                <a data-bind="attr: { href: hash }, html: title"></a>\r\n            </li>\r\n        </ul>\r\n\r\n        <div class="container" style="padding-top: 20px;" data-bind="router: { transition: \'fadeIn\', cacheViews: true }"></div>\r\n    </article>\r\n</section>\r\n'};i.router=t.a.createChildRouter().makeRelative({fromParent:!0}).map(a).buildNavigationModel();n.default=i}}]);